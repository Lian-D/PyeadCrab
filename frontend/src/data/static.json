{
    "nodes": [
        {
            "id": "GVector.__init__(self, x, y, z)",
            "name": "__init__",
            "params": "self, x, y, z",
            "class": "GVector",
            "calls": 1
        },
        {
            "id": "GVector.Mag(self)",
            "name": "Mag",
            "params": "self",
            "class": "GVector",
            "calls": 1
        },
        {
            "id": "GVector.dist(self, other)",
            "name": "dist",
            "params": "self, other",
            "class": "GVector",
            "calls": 1
        },
        {
            "id": "GVector.__add__(self, other)",
            "name": "__add__",
            "params": "self, other",
            "class": "GVector",
            "calls": 1
        },
        {
            "id": "GVector.__sub__(self, other)",
            "name": "__sub__",
            "params": "self, other",
            "class": "GVector",
            "calls": 1
        },
        {
            "id": "GVector.__mul__(self, other)",
            "name": "__mul__",
            "params": "self, other",
            "class": "GVector",
            "calls": 1
        },
        {
            "id": "GVector.linear_combination(self, other, l1, l2)",
            "name": "linear_combination",
            "params": "self, other, l1, l2",
            "class": "GVector",
            "calls": 1
        },
        {
            "id": "GVector.__str__(self)",
            "name": "__str__",
            "params": "self",
            "class": "GVector",
            "calls": 1
        },
        {
            "id": "GVector.__repr__(self)",
            "name": "__repr__",
            "params": "self",
            "class": "GVector",
            "calls": 1
        },
        {
            "id": "chaos.py.GetKnots(points, degree)",
            "name": "GetKnots",
            "params": "points, degree",
            "class": "chaos.py",
            "calls": 1
        },
        {
            "id": "Spline.__init__(self, points, degree, knots)",
            "name": "__init__",
            "params": "self, points, degree, knots",
            "class": "Spline",
            "calls": 1
        },
        {
            "id": "Spline.GetDomain(self)",
            "name": "GetDomain",
            "params": "self",
            "class": "Spline",
            "calls": 1
        }
    ],
    "links": [
        {
            "source": "Spline.__init__(self, points, degree, knots)",
            "target": "chaos.py.GetKnots(points, degree)"
        }
    ]
}